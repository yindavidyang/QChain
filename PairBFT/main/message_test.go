package main

import (
	"github.com/Nik-U/pbc"
	"testing"
	"github.com/sirupsen/logrus"
)

const (
	numValidators = 10
)

var (
	pubKeys            []*pbc.Element
	log                = logrus.New()
)

func TestCommitVerification(t *testing.T) {
	bls := &BLS{}

	pairing, err := pbc.NewPairingFromString("type a\nq 2812117932765329014966910618758078119114162367827981932526142504820953187162353803419878645557396099833476413038568202891371934841117721600697306330038347\nh 1924129170256022817939893149324508642952067008643656577213083274524092256964484206555734291265588642054068\nr 1461501637330902918203607461463827683388751347711\nexp2 160\nexp1 86\nsign1 -1\nsign0 -1\n")
	bls.pairing = pairing
	if err != nil {
		t.Fail()
	}
	bls.g = pairing.NewG2()
	_, ok := bls.g.SetString("[1796030170620741276357491366233703556200365402499418363763088415815390451936461748227128520536822478854709415539889828629546022289056611652591740314983077, 488183520233485394687810704599617429599926974119907662413359635726004638192732811317533259600223514848448856289431989727268290670466480240382834388745489]", 10)
	if !ok {
		t.Fail()
	}

	pubKeys = make([]*pbc.Element, numValidators)
	for i := 0; i < numValidators; i++ {
		pubKeys[i] = pairing.NewG2()
	}

	pubKeys[0].SetString("[2523273844945120661245019925825374626535900666663104022213775684682090998362012192023035362680891150520516621170176568807239248572734333970017033186919095, 2163657108767786000295113668963063197672872482169721356394322690049129283928399074609607513645355241370641636969176766642602624436465762947524682160067809]", 10)
	pubKeys[1].SetString("[412787225812201601336017706922941086697193638067445651821102601471230282984752645268972917938862845011485498235472613034023816542656390707179599937503638, 2717268651810095981855156057907618215369666726971223150692729936807548514529796345523078129736209973242760189013381416953576323758174184248470261294265075]", 10)
	pubKeys[2].SetString("[378472959120756282724375211566561322071630081302261749409698683634253024479515742507720467275960530834377784731709892817787667150875390556794970224640739, 1712478818342953792124997543226697553978694841341974652634375608454223991857718087203489158463905697294550087498163712549341830129790042121399631041975259]", 10)
	pubKeys[3].SetString("[98739588077894794345847746216006764128423267916054261423277500802937206362487422390049217344334775612715966248652531763870410149125051370133201064802494, 2457062650618768011449041132209510837126777015913835449682938582974120469407295650794102933549436916916280989617109776002280655071340497590079580256862999]", 10)
	pubKeys[4].SetString("[2344378301102434049201809294182974333121953157084598502530611301310984584142147796986637612633986772865002142118099142163851133538538630164221350212524930, 897408895774874025644219239214171775809859260632115083773904001263672220071682563201686851347099383275521712506288279811621354306534816526113163247811598]", 10)
	pubKeys[5].SetString("[1071872781576634561823079097067847939517048453282170255355042073195955082096458633716437262437458326982313838966441988833054879551761771740512906610076160, 765277636319147019706601405941072885831863559438307401278278060918988694168013923277836060018623321558945563164760248013767327808258989995610016428951933]", 10)
	pubKeys[6].SetString("[1605841059623508843728758649820960919239496991858956820998659256855331215539707218375829029641403947641297690590290864536834343822568637208091296485437817, 909355131436065026907143006215171354046326319152894652794994756703617605572822260281850355781633992752909818747832298288017759369389004619977355350765059]", 10)
	pubKeys[7].SetString("[541527698604060917314883300539610007350067348814758344317649817189464448690124210022549711183228096898819445996290537048310972031825057047211670737655341, 2510930587347299179164500352497986093585999108789163855836612744766246019023560788430621515105117273998008970359891950982295469307210827280634550351308476]", 10)
	pubKeys[8].SetString("[1004726828319560413371479071769948024400683182643464000040538858287425738657950134905892213249514626093495699109595193798865759300230412784879147329296387, 2604106800417630123371322146689228617231969155286397550153275798273687634879378239401698097076752137687087087073182205292206202280034186623131087834081227]", 10)
	pubKeys[9].SetString("[534778404429486804479413575289836209642113733225520176509334768327887094674471375315631598097693021087699575471982764819823229482470516641091154317278373, 1514801873530318379535499119349207394256975025524774531084633745032705105294565387034771363776778427644062304797831918473099514721105529278142481857352581]", 10)

	cMsg := &CommitMsg{}
	cMsg.hash = []byte{193, 169, 142, 252, 239, 27, 190, 158, 115, 140, 49, 120, 22, 169, 205, 117, 84, 1, 178, 201, 199, 191, 72, 247, 35, 143, 34, 48, 226, 118, 103, 136}
	cMsg.blockID = 5
	cMsg.PSig = &AggSig{}
	cMsg.PSig.Init(bls)
	cMsg.PSig.counters = []uint32{2, 1, 0, 0, 0, 6, 1, 1, 1, 2}
	_, ok = cMsg.PSig.sig.SetString("[836920771390103298704840403989506711126891105325030286868262453233445363241750719393917951118204128689867847852288901086920405152164245349792635102919338, 1353212726997774966097932169298982977886387465233035071584156358874193135743959129902361718642569235442489424378458968595387329674046487523378003229371452]", 10)
	if !ok {
		t.Fail()
	}

	cMsg.CSig = &AggSig{}
	cMsg.CSig.Init(bls)
	cMsg.CSig.counters = []uint32{0, 0, 0, 0, 1, 0, 1, 0, 0, 1}
	_, ok = cMsg.CSig.sig.SetString("[370185111315020496045752294118200113280861073109881491536922489440221951697662816715471106646643213429011483802034462713866870630639458246719078096119087, 2421798655017249905464803845051037150312201013385508007857421972848668821449024822545271123126972739838161662770367247019923383734833467563449948686706091]", 10)
	if !ok {
		t.Fail()
	}

	cMsg.Preprocess(bls)
	ok = cMsg.Verify(bls)
	if !ok {
		t.Fail()
	}
}
